<!-- FIXME: ================================================================== -->

<!-- form mask -->
<script src="../libs/imask/imask.min.js"></script>
<!-- form mask init -->
<script src="../directorio_dash/js/pages/form-mask.init.js"></script>
<!--FIXME: ================================================================== -->

<!-- JAVASCRIPT -->
<script src="../directorio_dash/js/scripts_personalizadosdash.js"></script>
<script src="../libs/jquery/jquery.min.js"></script>
<script src="../libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="../libs/metismenu/metisMenu.min.js"></script>
<script src="../libs/simplebar/simplebar.min.js"></script>
<script src="../libs/node-waves/waves.min.js"></script>
<script src="../libs/feather-icons/feather.min.js"></script>

<!-- pace js -->
<script src="../directorio_dash/libs/pace-js/pace.min.js"></script>
<!-- Script comparar campos -->
<script src="../js/scripts-comparar-campos.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.8/dist/sweetalert2.all.min.js"></script>
<script src="../directorio_dash/js_clientes/alertify.min.js"></script>
<script src="../directorio_dash/js_clientes/alertify.js"></script>

<!-- Required datatable js -->
<script src="../libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="../libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
<!-- Responsive examples -->
<script src="../libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="../libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
<!-- init js -->
<script src="../directorio_dash/js/pages/datatable-pages.init.js"></script>

<script src="../directorio_dash/js/app.js"></script>

<!-- ==========FIXME: JS DEL FORMULARIO ================= -->

<!-- BEGIN: Vendor JS-->
<script src="../directorio_dash/js_clientes/vendors.min.js"></script>
<!-- BEGIN Vendor JS-->

<!-- BEGIN: Page Vendor JS-->
<script src="../directorio_dash/js_clientes/jquery.sticky.js"></script>
<script src="../directorio_dash/js_clientes/jquery.sparkline.min.js"></script>
<script src="../directorio_dash/js_clientes/jquery.steps.min.js"></script>
<script src="../directorio_dash/js_clientes/moment-with-locales.min.js"></script>


<script src="../directorio_dash/js_clientes/jquery.validate.min.js"></script>
<!-- END: Page Vendor JS-->

<!-- BEGIN: Theme JS-->
<script src="../directorio_dash/js_clientes/app-menu.min.js"></script>
<script src="../directorio_dash/js_clientes/app.min.js"></script>
<!-- <script src="./directorio_dash/js_clientes/customizer.min.js"></script> -->
<!-- END: Theme JS-->

<!-- BEGIN: Page JS-->
<script src="../directorio_dash/js_clientes/breadcrumbs-with-stats.min.js"></script>
<script src="../directorio_dash/js_clientes/wizard-steps.min.js"></script>

<script src="../directorio_dash/js_clientes/estilosPropios.js"></script>
<!-- END: Page JS-->
<script src="../directorio_dash/js_clientes/script_canvas.js"></script>

<!-- Google Maps JavaScript library -->
<script
  src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places&key=AIzaSyDnXrGToxsOSdtK01dW0yynlYxRsv8D6ro"></script>

<!-- * SCRIPTS DEL CALENDARIO DE NUEVO CLIENTE -->
<script src="../directorio_dash/js_clientes/jquery-ui.js"></script>
<script src="../directorio_dash/js_clientes/jquery-ui.min.js"></script>
<!-- * SCRIPTS DEL CALENDARIO DE NUEVO CLIENTE -->

<!-- Validaciónes campos -->
<script src="../js/scripts-validar-campos.js"></script>
<script src="../js/scripts-mask-currency.js"></script>
<script src="../js/scripts-mask-phone.js"></script>
<!-- ==========FIXME: JS DEL FORMULARIO ================= -->

<!-- ==== MASCARA PARA EL CAMPO SEGURO SOCIAL ==== -->
<script src="../js/mascara.js"></script>

<!-- === CALENDARIO == --> 
<script>
 $.datepicker.regional['es'] = {
        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        monthNamesShort: ['Enero','Febrero','Marzo','Abril', 'Mayo','Junio','Julio','Agosto','Septiembre', 'Octubre','Noviembre','Diciembre'],
        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles',   'Jueves', 'Viernes', 'Sábado'],
        dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
        dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
        weekHeader: 'Sm',
        dateFormat: 'mm/dd/yy',
        firstDay: 1,
        isRTL: false,
        showMonthAfterYear: false,
        yearSuffix: 'Seleccione fecha de expedición'
        };
        $.datepicker.setDefaults($.datepicker.regional['es']);

        const dateToday = new Date();
        const yrRange = '1900' + ":" + (dateToday.getFullYear());
        const hoy = new Date().getDate();
      $(function () {
      $("#f_expediccion, #expedicion_licenciaf").datepicker({
        yearRange: yrRange,
        maxDate:hoy,
        changeMonth: true,
        changeYear: true,
        

      });


});
$.datepicker.regional['es'] = {
        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        monthNamesShort: ['Enero','Febrero','Marzo','Abril', 'Mayo','Junio','Julio','Agosto','Septiembre', 'Octubre','Noviembre','Diciembre'],
        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
        dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
        dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
        weekHeader: 'Sm',
        dateFormat: 'mm/dd/yy',
        firstDay: 1,
        isRTL: false,
        showMonthAfterYear: false,
        yearSuffix: '',
        };
        $.datepicker.setDefaults($.datepicker.regional['es']);

        const dateTodayFuture = new Date();
        const yrRangeFuture = (dateToday.getFullYear()) + ":" + '3000';
        const hoyFuture = new Date().getDate();
      $(function () {
      $("#fecha_vencimientof, #vencimiento_licenciaf").datepicker({
      yearRange: yrRangeFuture,
      minDate: '0M',
      changeMonth: true,
      changeYear: true

      });
});

$.datepicker.regional['es'] = {
        
        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        monthNamesShort: ['Enero','Febrero','Marzo','Abril', 'Mayo','Junio','Julio','Agosto','Septiembre', 'Octubre','Noviembre','Diciembre'],
        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
        dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
        dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
        weekHeader: 'Sm',
        dateFormat: 'mm/dd/yy',
        firstDay: 1,
        isRTL: false,
        showMonthAfterYear: false,
        yearSuffix: '',
       
        };
        $.datepicker.setDefaults($.datepicker.regional['es']);

        const dateTodayBirth = new Date();
        const yrRangeBirth = (dateToday.getFullYear() -18);
        const hoyBirth = new Date().getDate();
        $(function () {
        $("#fecha_nacimientof,#fecha_nacif").datepicker({
          yearRange: '1900'+ ":" +yrRangeBirth,
         changeMonth: true,
        changeYear: true,
      });
});


/////////////////////////////////////////////////////////////////////////=-->

// =======================================================-->
//-======  VALIDAR LIMITANTE PARA UN CAMPO SOLO NUMBER ===== -->
// =======================================================-->

  function maxlengthNumber(obj) {
    console.log(obj.value);
    if (obj.value.length > obj.maxLength) {
      obj.value = obj.value.slice(0, obj.maxLength);
    }
  }

  //-================================ ======================-->
  //--================================ ======================-->

  //   TODO: ACCION PARA ACTIVAR EL CHECK DE PAGADO -->

  $(document).ready(function () {

    // FORMATEANDO PRECIO PARA EL CAMPO MONTO A FINANCIAR Y LIMITANDO SU VALOR
    const montoFinanciar = document.getElementById('monto-financiar');
    IMask(montoFinanciar, {
        mask: '$num',
        blocks: {
            num: {
                mask: Number,
                thousandsSeparator: ',',
                min: 500,
                max: 11200
            }
        }
    });

    $('#pagada').on('click', function () {
      var c = document.getElementById('pagada').checked;
      if (c) {

        $("#c_hipotecaria").hide();

      }

    });

    $('#hipotecada').on('click', function () {
      var c = document.getElementById('hipotecada').checked;
      if (c) {

        $("#c_hipotecaria").show();

      }

    });

    $('#rentada').on('click', function () {
      var c = document.getElementById('rentada').checked;
      if (c) {

        $("#c_hipotecaria").show();

      }

    });


  });

  //   TODO: ACCION PARA ACTIVAR EL CHECK DE PAGADO -->

  // //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK -->  

  function showContent() {
    element = document.getElementById("content");
    check = document.getElementById("check");
    if (check.checked) {
      element.style.display = 'block';
    } else {
      element.style.display = 'none';
    }
  }

  // //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK -->  

  // //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK CO-SOLICITANTE -->  

  function showContent() {
    element = document.getElementById("contentt");
    check = document.getElementById("mostrar");
    if (check.checked) {
      element.style.display = 'block';
    } else {
      element.style.display = 'none';
    }
  }

  // //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK CO-SOLICITANTE -->  

  // //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK INGRESOS -->  

  function showContent() {
    element = document.getElementById("contentt");
    check = document.getElementById("mostrar");
    if (check.checked) {
      element.style.display = 'block';
    } else {
      element.style.display = 'none';
    }
  }

  //  //TODO: OCULTAR Y MOSTRAR CONTENIDO CON CHECK INGRESOS-->  

  //   /TODO: FUNCIONES PARA OCULTAR Y MOSTRAR APARTADO DE BANCARROTA - NUEVO CLIENTE  -->

  $(document).ready(function () {

    $('#no_bancarrota').on('click', function () {
      var c = document.getElementById('no_bancarrota').checked;
      if (c) {

        $("#acc_pendiente").hide();

      }

    });

    $('#si_bancarrota').on('click', function () {
      var c = document.getElementById('si_bancarrota').checked;
      if (c) {

        $("#acc_pendiente").show();

      }

    });

    $('#no_bancarrota').on('click', function () {
      var c = document.getElementById('no_bancarrota').checked;
      if (c) {

        $("#tipo_bancarrota").hide();

      }

    });

    $('#no_bancarrota').on('click', function () {
      var c = document.getElementById('no_bancarrota').checked;
      if (c) {

        $("#anio_bancarrotaid").hide();

      }

    });

    $('#no_pendiente').on('click', function () {
      var c = document.getElementById('no_pendiente').checked;
      if (c) {

        $("#anio_bancarrotaid").hide();

      }

    });

    $('#si_pendiente').on('click', function () {
      var c = document.getElementById('si_pendiente').checked;
      if (c) {

        $("#anio_bancarrotaid").show();

      }

    });

    $('#no_pendiente').on('click', function () {
      var c = document.getElementById('no_pendiente').checked;
      if (c) {

        $("#tipo_bancarrota").hide();

      }

    });

    $('#si_pendiente').on('click', function () {
      var c = document.getElementById('si_pendiente').checked;
      if (c) {

        $("#tipo_bancarrota").show();

      }

    });

  });

  //  /TODO: FUNCIONES PARA OCULTAR Y MOSTRAR APARTADO DE BANCARROTA - NUEVO CLIENTE  -->

  //  /TODO: FUNCIONES PARA MASCARA  -->

  // ==> LICENCIA DESDE EL FORMULARIO LARGO SOLICITAR CREDITO  == <==
  function licencia1(){
            let fileInput = document.getElementById('licencia_cliente_frontal1')
                let filePath = fileInput.value;
                let allowedExtensions = /(.jpg|.jpeg|.png)$/i;
                let archivo = fileInput.files[0];
                if(!allowedExtensions.exec(filePath)){
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.error('Solo archivos .jpg, jpeg y .png son aceptados');
                    fileInput.value = '';
                    return false;
                }else if(archivo.size > 5000000) {
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.error('Tu archivo supera los 5MB de peso');
                    fileInput.value = '';
                    return false;
                }else {
                if (fileInput.files && fileInput.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                    $('#imagePre1').attr('src', e.target.result); // Renderizamos la imagen
                }
                 reader.readAsDataURL(fileInput.files[0]);
              }
           }
       }
        $("#imgInp").change(function () {
        // Código a ejecutar cuando se detecta un cambio de archivO
        readImage(this);
     });
  function licencia2(){
            let fileInput = document.getElementById('licencia_cliente_trasera1')
                let filePath = fileInput.value;
                let allowedExtensions = /(.jpg|.jpeg|.png)$/i;
                let archivo = fileInput.files[0];
                if(!allowedExtensions.exec(filePath)){
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.error('Solo archivos .jpg, jpeg y .png son aceptados');
                    fileInput.value = '';
                    return false;
                }else if(archivo.size > 5000000) {
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.error('Tu archivo supera los 5MB de peso');
                    fileInput.value = '';
                    return false;
                }else {
                if (fileInput.files && fileInput.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                    $('#imagePre1').attr('src', e.target.result); // Renderizamos la imagen
                }
                 reader.readAsDataURL(fileInput.files[0]);
              }
           }
       }
        $("#imgInp").change(function () {
        // Código a ejecutar cuando se detecta un cambio de archivO
        readImage(this);
     });

  // $(document).on('change', '#campoFile', function () {
  //   // this.files[0].size recupera el tamaño del archivo
  //   // alert(this.files[0].size);

  //   var fileName = this.files[0].name;
  //   var fileSize = this.files[0].size;

  //   if (fileSize > 5000000) {
  //     alertify.set('notifier', 'position', 'top-center');
  //     alertify.error('El archivo supera los 5MB de peso');
  //     this.value = '';
  //     this.files[0].name = '';
  //   } else {
  //     // recuperamos la extensión del archivo
  //     var ext = fileName.split('.').pop();

  //     // Convertimos en minúscula porque 
  //     // la extensión del archivo puede estar en mayúscula
  //     ext = ext.toLowerCase();

  //     // console.log(ext);
  //     switch (ext) {
  //       case 'png':
  //       case 'jpg':
  //       case 'jpeg':
  //         break;
  //       default:
  //         alertify.set('notifier', 'position', 'top-center');
  //         alertify.error('Solo archivos .jpg, jpeg y .png son aceptados');

  //         this.value = ''; // reset del valor
  //         this.files[0].name = '';
  //     }
  //   }
  // });

 
  // ====================================================================-->
  //  === ATRAPAR EL NOMBRE DEL CAMPO LICIENCIA Y REFLEJARLO EN EL INPUT == -->
  // ====================================================================-->

  $(function () {

    // This code will attach `fileselect` event to all file inputs on the page
    $(document).on('change', ':file', function () {
      var input = $(this),
        numFiles = input.get(0).files ? input.get(0).files.length : 1,
        label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
      input.trigger('fileselect', [numFiles, label]);
    });


    $(document).ready(function () {
      //below code executes on file input change and append name in text control
      $(':file').on('fileselect', function (event, numFiles, label) {

        var input = $(this).parents('.input-group').find(':text'),
          log = numFiles > 1 ? numFiles + ' files selected' : label;

        if (input.length) {
          input.val(log);
        } else {
          if (log) alert(log);
        }

      });
    });

  });

  // ======================================================= ==============-->
  // ==   ==TODO: PARA LA API DE GOOGLE MAPS ======================================= -->

  let autocomplete;
  let postalField = document.getElementById('postalcode')
  let address1Field = document.getElementById('address1')
  let direccion = document.getElementById('direccionf')

  function initAutocomplete() {
 
    autocomplete = new google.maps.places.Autocomplete(
      direccion, {
        types: ['address'],
        componentrestrictions: {
          'country': ['US']
        },
        fields: ['address_components']
      }
    );

    autocomplete.addListener('place_changed', fillInAddress)

  }

  function fillInAddress() {
    const place = autocomplete.getPlace();
    let address1 = "";
    let postcode = "";

    for (const component of place.address_components) {
      const componentType = component.types[0];

      switch (componentType) {

        case "street_number": {
          address1 = `${component.long_name} ${address1}`;
          break;
        }

        case "route": {
          address1 += component.short_name;
          break;
        }

        case "postal_code": {
          postcode = `${component.long_name}${postcode}`;
          break;
        }

        case "postal_code_suffix": {
          postcode = `${postcode}-${component.long_name}`;
          break;
        }
        case "locality":
          document.querySelector("#ciudadf").value = component.long_name;
          break;
        case "administrative_area_level_1": {
          document.querySelector("#estadof").value = component.long_name;
          break;
        }
        /*
        case "country":
            document.querySelector("#pais").value = component.long_name;
            break;
        */
      }
    }
    direccion.value = address1;
    postalField.value = postcode;

  }

  window.initAutocomplete = initAutocomplete;
  // Cargar función initAutocomplete al acceder a la página
  google.maps.event.addDomListener(window, 'load', initAutocomplete);

  var dateMask = IMask(document.getElementById('date-credito'), {
  mask: 'mm.yyyy',
  blocks: {
    mm: {
      mask: IMask.MaskedRange,
      from: 1,
      to: 12,
    },
    yyyy: {
      mask: IMask.MaskedRange,
      from: 1990,
      to: 2080,
    },
  },
});

 
</script>

</body>

</html>